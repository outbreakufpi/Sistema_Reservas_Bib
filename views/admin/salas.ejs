<!DOCTYPE html>
<html>
<head>
    <title>Gerenciar Salas - Sistema de Reservas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/dashboard">Sistema de Reservas</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/minhas-reservas">Minhas Reservas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/admin/salas">Gerenciar Salas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/reservas">Gerenciar Reservas</a>
                    </li>
                </ul>
                <button class="btn btn-outline-light" onclick="logout()">Sair</button>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col">
                <h2>Gerenciar Salas</h2>
            </div>
            <div class="col text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalSala">
                    Nova Sala
                </button>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Nome</th>
                                <th>Capacidade</th>
                                <th>Recursos</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="listaSalas">
                            <!-- Salas serão inseridas aqui via JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para adicionar/editar sala -->
    <div class="modal fade" id="modalSala" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Nova Sala</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formSala">
                        <input type="hidden" id="salaId">
                        <div class="mb-3">
                            <label class="form-label">Nome da Sala</label>
                            <input type="text" class="form-control" id="nomeSala" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Capacidade</label>
                            <input type="number" class="form-control" id="capacidadeSala" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Recursos</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="projetor">
                                <label class="form-check-label">Projetor</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="arCondicionado">
                                <label class="form-check-label">Ar Condicionado</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="internet">
                                <label class="form-check-label">Internet</label>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="salvarSala()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Verificar autenticação
        const token = localStorage.getItem('token');
        const userType = localStorage.getItem('userType');

        if (!token || userType !== 'admin') {
            window.location.href = '/login';
        }

        // Função para carregar as salas
        async function carregarSalas() {
            try {
                console.log('Iniciando carregamento de salas...'); // Debug
                
                const response = await fetch('/api/salas', {
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                });
                
                console.log('Status da resposta:', response.status); // Debug
                
                if (!response.ok) {
                    throw new Error('Erro ao carregar salas');
                }
                
                const salas = await response.json();
                console.log('Salas recebidas:', salas); // Debug
                
                const tbody = document.querySelector('#listaSalas');
                tbody.innerHTML = '';
                
                salas.forEach(sala => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${sala.nome}</td>
                        <td>${sala.capacidade}</td>
                        <td>${formatarRecursos(sala.recursos)}</td>
                        <td>
                            <button class="btn btn-sm btn-primary" onclick="editarSala(${sala.id})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="excluirSala(${sala.id})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    `;
                    tbody.appendChild(tr);
                });
            } catch (error) {
                console.error('Erro ao carregar salas:', error);
                alert('Erro ao carregar salas. Por favor, tente novamente.');
            }
        }

        // Função para formatar os recursos
        function formatarRecursos(recursos) {
            if (!recursos) return '';
            
            let recursosArray = recursos;
            if (typeof recursos === 'string') {
                try {
                    recursosArray = JSON.parse(recursos);
                } catch (e) {
                    recursosArray = recursos.split(',');
                }
            }
            
            if (!Array.isArray(recursosArray)) {
                recursosArray = [recursosArray];
            }
            
            return recursosArray.map(recurso => {
                switch(recurso.trim()) {
                    case 'projetor': return '<i class="fas fa-project-diagram" title="Projetor"></i>';
                    case 'ar_condicionado': return '<i class="fas fa-snowflake" title="Ar Condicionado"></i>';
                    case 'internet': return '<i class="fas fa-wifi" title="Internet"></i>';
                    default: return recurso;
                }
            }).join(' ');
        }

        // Função para limpar o formulário
        function limparFormulario() {
            document.getElementById('salaId').value = '';
            document.getElementById('nomeSala').value = '';
            document.getElementById('capacidadeSala').value = '';
            document.getElementById('projetor').checked = false;
            document.getElementById('arCondicionado').checked = false;
            document.getElementById('internet').checked = false;
            document.getElementById('modalTitle').textContent = 'Nova Sala';
        }

        // Função para salvar uma sala
        async function salvarSala() {
            console.log('Função salvarSala chamada'); // Debug
            
            const token = localStorage.getItem('token');
            const userType = localStorage.getItem('userType');
            
            console.log('Token:', token); // Debug
            console.log('Tipo de usuário:', userType); // Debug
            
            if (!token) {
                alert('Você precisa estar logado para criar uma sala');
                window.location.href = '/login';
                return;
            }
            
            if (userType !== 'admin') {
                alert('Apenas administradores podem criar salas');
                window.location.href = '/dashboard';
                return;
            }
            
            const nome = document.getElementById('nomeSala').value;
            const capacidade = document.getElementById('capacidadeSala').value;
            
            console.log('Dados do formulário:', { nome, capacidade }); // Debug
            
            if (!nome || !capacidade) {
                alert('Por favor, preencha todos os campos obrigatórios.');
                return;
            }
            
            const recursos = [];
            if (document.getElementById('projetor').checked) recursos.push('projetor');
            if (document.getElementById('arCondicionado').checked) recursos.push('ar_condicionado');
            if (document.getElementById('internet').checked) recursos.push('internet');
            
            console.log('Recursos selecionados:', recursos); // Debug
            
            try {
                const url = '/api/salas';
                console.log('Fazendo requisição para:', url); // Debug
                
                const dados = {
                    nome: nome,
                    capacidade: parseInt(capacidade),
                    recursos: recursos
                };
                
                console.log('Dados sendo enviados:', dados); // Debug
                
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify(dados)
                });
                
                console.log('Response status:', response.status); // Debug
                
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error('Erro do servidor:', errorData); // Debug
                    throw new Error(errorData.error || 'Erro ao salvar sala');
                }
                
                const responseData = await response.json();
                console.log('Response data:', responseData); // Debug
                
                // Fechar o modal
                const modalElement = document.getElementById('modalSala');
                const modal = bootstrap.Modal.getInstance(modalElement);
                if (modal) {
                    modal.hide();
                }
                
                // Limpar o formulário
                limparFormulario();
                
                // Atualizar a lista de salas
                await carregarSalas();
                
                // Remover o backdrop do modal
                const backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                    backdrop.remove();
                }
                
                // Remover a classe modal-open do body
                document.body.classList.remove('modal-open');
                document.body.style.overflow = '';
                document.body.style.paddingRight = '';
                
            } catch (error) {
                console.error('Erro completo:', error); // Debug
                alert(error.message || 'Erro ao salvar sala. Por favor, tente novamente.');
            }
        }

        // Função para editar uma sala
        async function editarSala(id) {
            try {
                console.log('Iniciando edição da sala:', id);
                const token = localStorage.getItem('token');
                console.log('Token:', token);
                
                const response = await fetch(`/api/salas/${id}`, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                
                console.log('Status da resposta:', response.status);
                
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error('Erro da API:', errorData);
                    throw new Error('Erro ao carregar dados da sala');
                }
                
                const sala = await response.json();
                console.log('Dados da sala:', sala);
                
                document.getElementById('salaId').value = sala.id;
                document.getElementById('nomeSala').value = sala.nome;
                document.getElementById('capacidadeSala').value = sala.capacidade;
                
                // Converter recursos para array se for string
                let recursos = sala.recursos;
                console.log('Recursos antes do processamento:', recursos);
                
                if (typeof recursos === 'string') {
                    try {
                        recursos = JSON.parse(recursos);
                    } catch (e) {
                        recursos = recursos.split(',');
                    }
                }
                
                console.log('Recursos processados:', recursos);
                
                // Marcar os checkboxes corretamente
                document.getElementById('projetor').checked = recursos.includes('projetor');
                document.getElementById('arCondicionado').checked = recursos.includes('ar_condicionado');
                document.getElementById('internet').checked = recursos.includes('internet');
                
                document.getElementById('modalTitle').textContent = 'Editar Sala';
                new bootstrap.Modal(document.getElementById('modalSala')).show();
            } catch (error) {
                console.error('Erro completo:', error);
                alert('Erro ao carregar dados da sala. Por favor, tente novamente.');
            }
        }

        // Função para excluir uma sala
        async function excluirSala(id) {
            if (!confirm('Tem certeza que deseja excluir esta sala?')) {
                return;
            }
            
            try {
                const response = await fetch(`/api/salas/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Erro ao excluir sala');
                }
                
                carregarSalas();
            } catch (error) {
                console.error('Erro:', error);
                alert('Erro ao excluir sala. Por favor, tente novamente.');
            }
        }

        // Função para fazer logout
        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('userType');
            localStorage.removeItem('userName');
            window.location.href = '/login';
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM carregado'); // Debug
            carregarSalas();
            
            // Limpar formulário quando o modal for fechado
            const modal = document.getElementById('modalSala');
            modal.addEventListener('hidden.bs.modal', limparFormulario);
        });
    </script>
</body>
</html> 